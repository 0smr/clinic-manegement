//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ClinicMangement
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class ClinicMangementEntities2 : DbContext
    {
        public ClinicMangementEntities2()
            : base("name=ClinicMangementEntities2")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<CallTheRoll> CallTheRoll { get; set; }
        public DbSet<DarmanType> DarmanType { get; set; }
        public DbSet<Employes> Employes { get; set; }
        public DbSet<EmployesType> EmployesType { get; set; }
        public DbSet<Insurance> Insurance { get; set; }
        public DbSet<Patient> Patient { get; set; }
        public DbSet<RootUser> RootUser { get; set; }
        public DbSet<sysdiagrams> sysdiagrams { get; set; }
        public DbSet<SystemUsers> SystemUsers { get; set; }
        public DbSet<Visit> Visit { get; set; }
    
        public virtual ObjectResult<FetchEmployes_Result> FetchEmployes()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FetchEmployes_Result>("FetchEmployes");
        }
    
        public virtual ObjectResult<FetchInsurance_Result> FetchInsurance()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FetchInsurance_Result>("FetchInsurance");
        }
    
        public virtual int InsertDarmanType(string darmanname)
        {
            var darmannameParameter = darmanname != null ?
                new ObjectParameter("darmanname", darmanname) :
                new ObjectParameter("darmanname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertDarmanType", darmannameParameter);
        }
    
        public virtual int InsertEmpeloyes(Nullable<int> employsType, string employName, string employLname, Nullable<int> phoneNumber, string adrress)
        {
            var employsTypeParameter = employsType.HasValue ?
                new ObjectParameter("EmploysType", employsType) :
                new ObjectParameter("EmploysType", typeof(int));
    
            var employNameParameter = employName != null ?
                new ObjectParameter("EmployName", employName) :
                new ObjectParameter("EmployName", typeof(string));
    
            var employLnameParameter = employLname != null ?
                new ObjectParameter("EmployLname", employLname) :
                new ObjectParameter("EmployLname", typeof(string));
    
            var phoneNumberParameter = phoneNumber.HasValue ?
                new ObjectParameter("PhoneNumber", phoneNumber) :
                new ObjectParameter("PhoneNumber", typeof(int));
    
            var adrressParameter = adrress != null ?
                new ObjectParameter("Adrress", adrress) :
                new ObjectParameter("Adrress", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertEmpeloyes", employsTypeParameter, employNameParameter, employLnameParameter, phoneNumberParameter, adrressParameter);
        }
    }
}
